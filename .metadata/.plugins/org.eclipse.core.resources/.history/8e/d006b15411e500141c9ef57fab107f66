/*
 * Key.c
 *
 *  Created on: Apr 14, 2015
 *      Author: MiklPikl
 */

#include "Platform.h"
#if PL_HAS_KEYS
	#include "Key.h"
#endif
#if PL_HAS_EVENTS
	#include "Event.h"
#endif

#if PL_HAS_KBI

void KEY_OnInterrupt(KEY_Buttons button)
{
	switch(button)
	{
		#if PL_NUM_KEYS >= 1
		case KEY_BTN1:
			EVENT_Set(EVENT_SW1_Press);
			break;
		#endif

		#if PL_NUM_KEYS >= 2
		case KEY_BTN2:
			EVENT_Set(EVENT_SW2_Press);
			break;
		#endif

		#if PL_NUM_KEYS >= 3
		case KEY_BTN3:
			EVENT_Set(EVENT_SW3_Press);
			break;
		#endif

		#if PL_NUM_KEYS >= 4
		case KEY_BTN4:
			EVENT_Set(EVENT_SW4_Press);
			break;
		#endif

		#if PL_NUM_KEYS >= 5
		case KEY_BTN5:
			EVENT_Set(EVENT_SW5_Press);
			break;
		#endif

		#if PL_NUM_KEYS >= 6
		case KEY_BTN6:
			EVENT_Set(EVENT_SW6_Press);
			break;
		#endif

		#if PL_NUM_KEYS >= 7
		case KEY_BTN7:
			EVENT_Set(EVENT_SW7_Press);
			break;
		#endif

		default:
			///*Nothing set here
			break;
	}
}
#endif

void KEY_EnableInterrupts(void)
{
	#if PL_NUM_KEYS >= 1 && !PL_KEY_POLLED_KeyA
		KeyA_Enable();
	#endif

	#if PL_NUM_KEYS >= 2 && !PL_KEY_POLLED_KeyB
		KeyB_Enable();
	#endif

	#if PL_NUM_KEYS >= 3 && !PL_KEY_POLLED_KeyC
		KeyC_Enable();
	#endif

	#if PL_NUM_KEYS >= 4 && !PL_KEY_POLLED_KeyD
		KeyD_Enable();
	#endif

	#if PL_NUM_KEYS >= 5 && !PL_KEY_POLLED_KeyE
		KeyE_Enable();
	#endif

	#if PL_NUM_KEYS >= 6 && !PL_KEY_POLLED_KeyF
		KeyF_Enable();
	#endif

	#if PL_NUM_KEYS >= 7 && !PL_KEY_POLLED_KeyKEY
		KeyKEY_Enable();
	#endif
}

void KEY_DisableInterrupts(void)
{
	#if PL_NUM_KEYS >= 1 && !PL_KEY_POLLED_KeyA
		KeyA_Disable();
	#endif

	#if PL_NUM_KEYS >= 2 && !PL_KEY_POLLED_KeyB
		KeyB_Disable();
	#endif

	#if PL_NUM_KEYS >= 3 && !PL_KEY_POLLED_KeyC
		KeyC_Disable();
	#endif

	#if PL_NUM_KEYS >= 4 && !PL_KEY_POLLED_KeyD
		KeyD_Disable();
	#endif

	#if PL_NUM_KEYS >= 5 && !PL_KEY_POLLED_KeyE
		KeyE_Disable();
	#endif

	#if PL_NUM_KEYS >= 6 && !PL_KEY_POLLED_KeyF
		KeyF_Disable();
	#endif

	#if PL_NUM_KEYS >= 7 && !PL_KEY_POLLED_KeyKEY
		KeyKEY_Disable();
	#endif
}

void PORTA_OnInterrupt(void)
{
	void Cpu_ivINT_PORTA(void);

	Cpu_ivINT_PORTA();
}

#endif

void KEY_Init(void)
{
	///*Nothing needed here for now
}

void KEY_DeInit(void)
{
	///*Nothing needed here for now
}

void KEY_Scan(void)
{
	#if PL_NUM_KEYS >= 1 && !PL_KEY_POLLED_KeyA
		if(KeyA_Get()) 		///*Checks if Key is pressed
		{
			EVENT_SetEVENT(EVENT_KeyA_Press);
		}
	#endif

	#if PL_NUM_KEYS >= 2 && !PL_KEY_POLLED_KeyB
		if(KeyB_Get()) 		///*Checks if Key is pressed
			{
				EVENT_SetEVENT(EVENT_KeyB_Press);
			}
	#endif

	#if PL_NUM_KEYS >= 3 && !PL_KEY_POLLED_KeyC
		if(KeyC_Get()) 		///*Checks if Key is pressed
			{
				EVENT_SetEVENT(EVENT_KeyC_Press);
			}
	#endif

	#if PL_NUM_KEYS >= 4 && !PL_KEY_POLLED_KeyD
		if(KeyD_Get()) 		///*Checks if Key is pressed
			{
				EVENT_SetEVENT(EVENT_KeyD_Press);
			}
	#endif

	#if PL_NUM_KEYS >= 5 && !PL_KEY_POLLED_KeyE
		if(KeyE_Get()) 		///*Checks if Key is pressed
			{
				EVENT_SetEVENT(EVENT_KeyE_Press);
			}
	#endif

	#if PL_NUM_KEYS >= 6 && !PL_KEY_POLLED_KeyF
		if(KeyF_Get()) 		///*Checks if Key is pressed
			{
				EVENT_SetEVENT(EVENT_KeyF_Press);
			}
	#endif

	#if PL_NUM_KEYS >= 7 && !PL_KEY_POLLED_KeyKEY
		if(KeyKEY_Get()) 		///*Checks if Key is pressed
			{
				EVENT_SetEVENT(EVENT_KeyKEY_Press);
			}
	#endif
}
#endif ///*PL_HAS_KEYS
